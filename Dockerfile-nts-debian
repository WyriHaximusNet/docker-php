# syntax=docker/dockerfile:experimental
FROM php:7.4-cli-buster AS build-uv
RUN apt-get update && \
    yes | apt-get install $PHPIZE_DEPS git libuv1-dev && \
    git clone https://github.com/bwoebi/php-uv uv
WORKDIR /uv
RUN git fetch \
    && git pull \
    && phpize \
    && ./configure \
    && make install \
    && EXTENSION_DIR=`php-config --extension-dir 2>/dev/null` && \
    cp "$EXTENSION_DIR/uv.so" /uv.so
RUN sha256sum /uv.so

FROM php:7.4-cli-buster AS nts-slim-root

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="wyrihaximusnet/php" \
      org.label-schema.description="Opinionated ReactPHP optimised PHP Docker images" \
      org.label-schema.url="https://github.com/wyrihaximusnet/docker-php" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/wyrihaximusnet/docker-php" \
      org.label-schema.vendor="WyriHaximus.net" \
      org.label-schema.schema-version="1.0"

RUN set -x \
    && addgroup --gid 1000 app \
    && adduser --uid 1000 --gid 1000 --disabled-password app \
    && touch /.you-are-in-a-wyrihaximus.net-php-docker-image

COPY --from=build-uv /uv.so /uv.so

# Patch CVE-2018-14618 (curl), CVE-2018-16842 (libxml2), CVE-2019-1543 (openssl)
RUN apt-get update && \
    yes | apt-get upgrade curl libxml2 openssl

# Install docker help scripts
COPY src/php/utils/docker/debian/ /usr/local/bin/

COPY src/php/conf/ /usr/local/etc/php/conf.d/
COPY src/php/cli/conf/*.ini /usr/local/etc/php/conf.d/

RUN EXTENSION_DIR=`php-config --extension-dir 2>/dev/null` && \
	mv /*.so "$EXTENSION_DIR/" && \
	apt-get update && \
	yes | apt-get upgrade && \
    yes | apt-get install \
        libgmp-dev \
        zlib1g-dev \
        libpq-dev \
        libzip-dev \
        libuv1-dev \
        make \
        git \
        openssh-client \
        bash \
        coreutils \
        procps \
        git \
        wget \
        gdb \
        $PHPIZE_DEPS \
    && docker-php-ext-install -j$(nproc) pcntl pgsql pdo pdo_pgsql bcmath zip gmp iconv \
    && docker-php-ext-enable uv \
    && wget -O - https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh > /bin/wait-for \
    && chmod +x /bin/wait-for \
    && yes | apt-get purge wget $PHPIZE_DEPS \
    && yes | apt autoremove \
    && rm -rf /var/cache/apt/* \
    && rm -rf /tmp/*

# Install shush
COPY src/php/utils/install-shush /usr/local/bin/
RUN install-shush && rm -rf /usr/local/bin/install-shush

STOPSIGNAL SIGTERM

ENTRYPOINT ["/usr/local/bin/shush", "exec", "docker-php-entrypoint"]

## NTS-DEV STAGE ##
FROM nts-slim-root AS nts-root

# Install ext-gd and ext-vips
COPY src/php/utils/docker/debian/install-gd-and-vips /usr/local/bin/install-gd-and-vips
RUN install-gd-and-vips && rm -rf /usr/local/bin/install-gd-and-vips

## NTS-DEV STAGE ##
FROM nts-slim-root AS nts-slim-dev-root

RUN touch /.you-are-in-a-wyrihaximus.net-php-docker-image-dev

# Install docker help scripts
COPY src/php/utils/docker/debian/dev-mode /usr/local/bin/dev-mode
COPY src/php/utils/docker/debian/docker-php-dev-mode /usr/local/bin/docker-php-dev-mode
RUN dev-mode && rm -rf /usr/local/bin/dev-mode && rm -rf /usr/local/bin/docker-php-dev-mode

# Install composer
COPY src/php/utils/install-composer /usr/local/bin/
RUN apt-get update \
    && yes | apt-get install wget \
    && install-composer \
    && yes | apt-get purge wget \
    && rm -rf /usr/local/bin/install-composer

# Change entrypoint back to the default because we don't need shush in development
ENTRYPOINT ["docker-php-entrypoint"]

## NTS-DEV STAGE ##
FROM nts-root AS nts-dev-root

RUN touch /.you-are-in-a-wyrihaximus.net-php-docker-image-dev

# Install docker help scripts
COPY src/php/utils/docker/debian/dev-mode /usr/local/bin/dev-mode
COPY src/php/utils/docker/debian/docker-php-dev-mode /usr/local/bin/docker-php-dev-mode
RUN dev-mode && rm -rf /usr/local/bin/dev-mode && rm -rf /usr/local/bin/docker-php-dev-mode

# Install composer
COPY src/php/utils/install-composer /usr/local/bin/
RUN apt-get update \
    && yes | apt-get install wget \
    && install-composer \
    && yes | apt-get purge wget \
    && rm -rf /usr/local/bin/install-composer

# Change entrypoint back to the default because we don't need shush in development
ENTRYPOINT ["docker-php-entrypoint"]

## NTS-DEV stage ##
FROM nts-slim-dev-root AS nts-slim-dev
USER app

FROM nts-dev-root AS nts-dev
USER app

## NTS stage ##
FROM nts-slim-root AS nts-slim
USER app

FROM nts-root AS nts
USER app
