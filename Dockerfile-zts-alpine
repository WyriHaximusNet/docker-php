# syntax=docker/dockerfile:experimental
FROM php:7.4-zts-alpine3.11 AS base

# Build-time metadata as defined at http://label-schema.org
LABEL org.label-schema.name="wyrihaximusnet/php" \
      org.label-schema.description="Opinionated ReactPHP optimised PHP Docker images" \
      org.label-schema.url="https://github.com/wyrihaximusnet/docker-php" \
      org.label-schema.vcs-url="https://github.com/wyrihaximusnet/docker-php" \
      org.label-schema.vendor="WyriHaximus.net" \
      org.label-schema.schema-version="1.0"

RUN apk update \
    && apk upgrade \
    && set -x \
    && addgroup -g 1000 app \
    && adduser -u 1000 -D -G app app \
    && touch /.you-are-in-a-wyrihaximus.net-php-docker-image

FROM base AS base-build
RUN apk add --no-cache $PHPIZE_DEPS git libuv-dev

FROM base-build AS build-uv
RUN git clone https://github.com/bwoebi/php-uv uv
WORKDIR /uv
RUN git fetch \
    && git pull \
    && phpize \
    && ./configure \
    && make install \
    && EXTENSION_DIR=`php-config --extension-dir 2>/dev/null` && \
    cp "$EXTENSION_DIR/uv.so" /uv.so
RUN sha256sum /uv.so

FROM base AS zts-slim-root

COPY --from=build-uv /uv.so /uv.so

# Install docker help scripts
COPY src/php/utils/docker/alpine/ /usr/local/bin/

COPY src/php/conf/ /usr/local/etc/php/conf.d/
COPY src/php/cli/conf/*.ini /usr/local/etc/php/conf.d/

RUN EXTENSION_DIR=`php-config --extension-dir 2>/dev/null` && \
	mv /*.so "$EXTENSION_DIR/" && \
	apk add --no-cache \
        gmp-dev \
        zlib-dev \
        postgresql-dev \
        libzip-dev \
        libuv-dev \
        make \
        git \
        openssh-client \
        bash \
        coreutils \
        procps \
        git \
        $PHPIZE_DEPS \
    ## Install PECL
    && wget -q pear.php.net/go-pear.phar && php go-pear.phar \
    && docker-php-ext-install -j$(nproc) pcntl pgsql pdo pdo_pgsql bcmath zip gmp iconv opcache \
    && pecl install parallel \
    && docker-php-ext-enable parallel \
    && docker-php-ext-enable uv \
    && apk del $PHPIZE_DEPS \
    && wget -q -O - https://raw.githubusercontent.com/eficode/wait-for/master/wait-for > /bin/wait-for \
    && chmod +x /bin/wait-for \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/*

# Install shush
COPY src/php/utils/install-shush /usr/local/bin/
RUN install-shush && rm -rf /usr/local/bin/install-shush

STOPSIGNAL SIGTERM

ENTRYPOINT ["/usr/local/bin/shush", "exec", "docker-php-entrypoint"]

## ZTS-DEV STAGE ##
FROM zts-slim-root AS zts-root

# Install ext-gd and ext-vips
COPY src/php/utils/docker/alpine/install-gd-and-vips /usr/local/bin/install-gd-and-vips
RUN install-gd-and-vips && rm -rf /usr/local/bin/install-gd-and-vips

## ZTS-DEV STAGE ##
FROM zts-slim-root AS zts-slim-dev-root

RUN touch /.you-are-in-a-wyrihaximus.net-php-docker-image-dev

# Install docker help scripts
COPY src/php/utils/docker/alpine/dev-mode /usr/local/bin/dev-mode
RUN dev-mode && rm -rf /usr/local/bin/dev-mode

# Install composer
COPY src/php/utils/install-composer /usr/local/bin/
RUN install-composer && rm -rf /usr/local/bin/install-composer

# Change entrypoint back to the default because we don't need shush in development
ENTRYPOINT ["docker-php-entrypoint"]

## ZTS-DEV STAGE ##
FROM zts-root AS zts-dev-root

RUN touch /.you-are-in-a-wyrihaximus.net-php-docker-image-dev

# Install docker help scripts
COPY src/php/utils/docker/alpine/dev-mode /usr/local/bin/dev-mode
RUN dev-mode && rm -rf /usr/local/bin/dev-mode

# Install composer
COPY src/php/utils/install-composer /usr/local/bin/
RUN install-composer && rm -rf /usr/local/bin/install-composer

# Change entrypoint back to the default because we don't need shush in development
ENTRYPOINT ["docker-php-entrypoint"]

## ZTS-DEV stage ##
FROM zts-slim-dev-root AS zts-slim-dev
USER app

FROM zts-dev-root AS zts-dev
USER app

## ZTS stage ##
FROM zts-slim-root AS zts-slim
USER app

FROM zts-root AS zts
USER app
